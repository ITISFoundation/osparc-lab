version: '3'
services:
  director:
    build:
      context: .
      dockerfile: ./director/Dockerfile
    volumes:
      - ./director:/work
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8010:8010"
    depends_on:
      - rabbit
  sidecar:
    build:
      context: .
      dockerfile: ./sidecar/Dockerfile
    volumes:
      - input:/input
      - output:/output
      - log:/log
      - ./sidecar:/work
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8000:8000"
    dns:
      - 172.16.8.15
  database:
    image: mongo:3.4.0
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    volumes:
      - db:/data/db
    ports:
      - "28017:28017"
    command: mongod --httpinterface --rest --smallfiles --logpath=/dev/null # --quiet
  database_ui:
    image: mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=database
    depends_on:
      - database
  rabbit:
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=z43
      - RABBITMQ_DEFAULT_PASS=z43
    ports:
      - "15672:15672"
  flower:
    image: ondrejit/flower:latest
    command: --broker=amqp://z43:z43@rabbit:5672
    ports:
      - 5555:5555
    depends_on:
      - director
  redis:
    image: redis
  redis-commander:
    image:   ficusio/redis-commander
    command: --redis-host redis
    ports:
      - "8082:8081"
    depends_on:
      - redis
  db:
    image: mysql:5.7
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=z43
      - MYSQL_DATABASE=dag_celery
  adminer:
    image: adminer
    restart: always
    ports:
      - 8070:8080
    depends_on:
      - db
#  qxapp:
#    build:
#      context: .
#      dockerfile: _dockerfiles/qxapp/node/Dockerfile
#      args:
#        web_app_port: 9090
#        s4l_ip: "172.16.9.89"
#        s4l_port_app: 9095
#        s4l_port_mod: 9096
#    ports:
#      - '8080:9090'
#    depends_on:
#      - director
volumes:
  input:
  output:
  log:
  db:

